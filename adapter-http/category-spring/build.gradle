/*
 * Java (TM) Pet Store Modernized Edition - 2020
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'java'
    id 'java-library'
    id 'eclipse'
    id 'jacoco'
}

dependencies {
	// Module Dependencies
    implementation project(':usecase')

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:2.2.1.RELEASE'
    implementation 'org.mapstruct:mapstruct:1.3.1.Final'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'

    testImplementation 'org.mockito:mockito-junit-jupiter:3.2.4'

    testImplementation 'com.github.tomakehurst:wiremock-standalone:2.26.0'
    testImplementation 'com.fasterxml.jackson.core:jackson-annotations:2.10.2'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.10.2'
    testImplementation 'com.fasterxml.jackson.core:jackson-core:2.10.2'

    testImplementation 'org.springframework.boot:spring-boot-starter:2.2.1.RELEASE'
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.2.1.RELEASE'){
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    compileOnly 'org.projectlombok:lombok:1.18.10'

    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
        '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}

test {
    useJUnitPlatform(){
    	includeTags 'unit'
    	excludeTags 'integration'
    }
}

task integrationTest(type: Test){
	useJUnitPlatform(){
		includeTags 'integration'
	}

	jacoco {
        destinationFile = file("$buildDir/jacoco/integrationTest.exec")
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport
